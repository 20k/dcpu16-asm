[
{name:"SET", cycle:1, class:"a", opcode:1, category:"arithmetic", signed:false, description:"SET b, a : Sets b to a"},
{name:"ADD", cycle:2, class:"a", opcode:2, category:"arithmetic", signed:false, description:"ADD b, a : Sets b to b+a, sets EX to 0x0001 on overflow"},
{name:"SUB", cycle:2, class:"a", opcode:3, category:"arithmetic", signed:false, description:"SUB b, a : Sets b to b-a, sets EX to 0xffff on underflow"},
{name:"MUL", cycle:2, class:"a", opcode:4, category:"arithmetic", signed:false, description:"MUL b, a : Sets b to b * a, sets EX to ((b*a)>>16)&0xffff. (b, a) are unsigned"},
{name:"MLI", cycle:2, class:"a", opcode:5, category:"arithmetic", signed:true, description:"MUL b, a : Sets b to b * a, sets EX to ((b*a)>>16)&0xffff. (b, a) are unsigned"},
{name:"DIV", cycle:3, class:"a", opcode:6, category:"arithmetic", signed:false, description:"DIV b, a : Sets b to b/a, sets EX to ((b<<16)/a)&0xffff. If a == 0, sets b and EX to 0. (b, a) are unsigned"},
{name:"DVI", cycle:3, class:"a", opcode:7, category:"arithmetic", signed:true, description:"DVI b, a : Like DIV. (b, a) are signed. Rounds towards 0"},
{name:"MOD", cycle:3, class:"a", opcode:8, category:"arithmetic", signed:false, description:"MOD b, a : Sets b to b%a. If a==0, sets b to 0 instead"},
{name:"MDI", cycle:3, class:"a", opcode:9, category:"arithmetic", signed:true, description:"MDI b, a : Like MOD. (b, a) are signed"},
{name:"AND", cycle:1, class:"a", opcode:10, category:"logical", signed:false, description:"AND b, a : Sets b to b&a"},
{name:"BOR", cycle:1, class:"a", opcode:11, category:"logical", signed:false, description:"BOR b, a : Sets b to b|a"},
{name:"XOR", cycle:1, class:"a", opcode:12, category:"logical", signed:false, description:"XOR b, a : Sets b to b^a"},
{name:"SHR", cycle:1, class:"a", opcode:13, category:"logical", signed:false, description:"SHR b, a : Sets b to b>>>a, sets EX to ((b<<16)>>a)&0xffff. Logical shift"},
{name:"ASR", cycle:1, class:"a", opcode:14, category:"logical", signed:false, description:"ASR b, a : Sets b to b>>a, sets EX to ((b<<16)>>>a)&0xffff. Arithmetic shift. (b) is signed"},
{name:"SHL", cycle:1, class:"a", opcode:15, category:"logical", signed:false, description:"SHL b, a : Sets b to b<<a, sets EX to ((b<<a)>>16)&0xffff"},
{name:"IFB", cycle:2, class:"a", opcode:16, category:"control", signed:false, description:"IFB b, a : Performs next instruction only if (b&a)!=0"},
{name:"IFC", cycle:2, class:"a", opcode:17, category:"control", signed:false, description:"IFC b, a : Performs next instruction only if (b&a)==0"},
{name:"IFE", cycle:2, class:"a", opcode:18, category:"control", signed:false, description:"IFE b, a : Performs next instruction only if b==a"},
{name:"IFN", cycle:2, class:"a", opcode:19, category:"control", signed:false, description:"IFN b, a : Performs next instruction only if b!=a"},
{name:"IFG", cycle:2, class:"a", opcode:20, category:"control", signed:false, description:"IFG b, a : Performs next instruction only if b>a"},
{name:"IFA", cycle:2, class:"a", opcode:21, category:"control", signed:true, description:"IFA b, a : Performs next instruction only if b>a (signed)"},
{name:"IFL", cycle:2, class:"a", opcode:22, category:"control", signed:false, description:"IFL b, a : Performs next instruction only if b<a"},
{name:"IFU", cycle:2, class:"a", opcode:23, category:"control", signed:true, description:"IFU b, a : Performs next instruction only if b<a (signed)"},
{name:"ADX", cycle:3, class:"a", opcode:26, category:"arithmetic", signed:false, description:"ADX b, a : Sets b to b+a+EX, sets EX to 0x0001 on overflow, otherwise 0x0"},
{name:"SBX", cycle:3, class:"a", opcode:27, category:"arithmetic", signed:false, description:"SBX b, a : Sets b to b-a+EX, sets EX to 0xffff on overflow, otherwise 0x0"},
{name:"RCV", cycle:1, class:"a", opcode:28, category:"multiprocessor", signed:false, description:"RCV b, a : Sets b to a value received from the hardware with identifier a, blocks until received"},
{name:"SND", cycle:1, class:"a", opcode:29, category:"multiprocessor", signed:false, description:"SND b, a : Sends the value b to the hardware with identifier a, blocks until sent"},
{name:"STI", cycle:2, class:"a", opcode:30, category:"arithmetic", signed:false, description:"STI b, a : Sets b to a, then increases I and J by 1"},
{name:"STD", cycle:2, class:"a", opcode:31, category:"arithmetic", signed:false, description:"STD b, a : Sets b to a, then decreases I and J by 1"},
{name:"JSR", cycle:3, class:"b", opcode:1, category:"stack", signed:false, description:"JSR a : Pushes the address of the next instruction to the stack, then sets PC to a"},
{name:"INT", cycle:4, class:"b", opcode:8, category:"interrupt", signed:false, description:"INT a : Triggers a software interrupt with message a"},
{name:"IAG", cycle:1, class:"b", opcode:9, category:"interrupt", signed:false, description:"IAG a : Sets a to IA"},
{name:"IAS", cycle:1, class:"b", opcode:10, category:"interrupt", signed:false, description:"IAS a : Sets IA to a"},
{name:"RFI", cycle:3, class:"b", opcode:11, category:"stack", signed:false, description:"RFI a : Disables interrupt queueing, pops A from the stack, then pops PC from the stack"},
{name:"IAQ", cycle:2, class:"b", opcode:12, category:"interrupt", signed:false, description:"IAQ a : If a is nonzero, interrupts will be added to the queue instead of triggered. If a is 0, interrupts will be triggered as normal again"},
{name:"HWN", cycle:2, class:"b", opcode:16, category:"hardware", signed:false, description:"HWN a : Sets a to the number of connected hardware devices"},
{name:"HWQ", cycle:4, class:"b", opcode:17, category:"hardware", signed:false, description:"HSQ a : Sets A, B, C, X, Y registers to information about hardware a. A+(B<<16) is a 32 bit word identifying the hardware id. C is hardware version. X+(Y<<16) is a 32bit word identifying the manufacturer"},
{name:"HWI", cycle:4, class:"b", opcode:18, category:"hardware", signed:false, description:"HWI a : Sends an interrupt to hardware a"},
{name:"IFW", cycle:2, class:"b", opcode:26, category:"control", signed:false, description:"IFW a : Performs next instruction only if the hardware identified by a is waiting to write a value"},
{name:"IFR", cycle:2, class:"b", opcode:27, category:"control", signed:false, description:"IFR a : Performs next instruction only if the hardware identified by a is waiting to read a value"},
{name:"BRK", cycle:1, class:"c", opcode:0, category:"control", signed:false, description:"BRK : Terminates execution"}
]